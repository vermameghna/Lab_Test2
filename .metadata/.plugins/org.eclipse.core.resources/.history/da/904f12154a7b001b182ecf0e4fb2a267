package com.customerapp.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


import com.productcart.dao.ConnectionFactory;
import com.productcart.dao.DataAccessException;
import com.productcart.productdao.Product;

public class CustomerDaoImpl implements CutomerDao{
	
	private Connection connection;
	
	public CustomerDaoImpl() {
		connection = ConnectionFactory.getConnection();
	}

	@Override
	public List<Customer> showAllCustomers() {
		
		 List<Customer> customers =new ArrayList<>();
			try {

				PreparedStatement pstmt = connection.prepareStatement("select * from CustApp");
				pstmt.execute();
				ResultSet rs = pstmt.getResultSet();
				
				while(rs.next()) {
					
					customers.add(new Customer(rs.getInt(1),
							rs.getString(2),
							rs.getString(3),
							rs.getString(4)));
				}
			} catch (SQLException e) {
				throw new DataAccessException(e.getMessage());
			}
			return customers;
	}

	@Override
	public void addCustomer(Customer customer) {
		try {
			PreparedStatement pstmt = connection.prepareStatement("insert into CustApp(name,address,phone) values(?,?,?)");
			pstmt.setString(1, customer.getName());
			pstmt.setString(2, customer.getAddress());
			pstmt.setString(3, customer.getPhone());
			pstmt.executeUpdate();
			
		} catch (SQLException e) {
			throw new DataAccessException(e.getCause().getMessage());
		}
	}

	@Override
	public Customer getCustomerById(int id) {
		Customer tempProduct = null;
		try {
			
			PreparedStatement pstmt = connection.prepareStatement("select * from productCart where id=?");
			pstmt.setInt(1, id);
			ResultSet rs = pstmt.executeQuery();
			System.out.println("getproduct by id-----------------------");
			
			if(rs.next()) {
				tempProduct = new Product(rs.getInt("id"),
						rs.getString("name"), 
						rs.getInt("price"), 
						rs.getInt("quantity"));
			}
			
			if(tempProduct != null) {
				return tempProduct;
			}else {
				throw new DataAccessException("Product of" + id + "not found");
			}
			
			
		} catch (SQLException e) {
			throw new DataAccessException(e.getCause().getMessage());
		}
	}
	
	
}
